<?php

/**
 * @file
 * TARDIS Date module file.
 *
 * Alters the TARDIS query, filtering and organizing it by date.module fileds.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * This function is preferred over hook_form_alter() because it's more targeted.
 */
function tardisdate_form_tardis_general_settings_alter(&$form, &$form_state, $form_id) {
  // TARDIS Date vertical tab.
  $form['tardis_general_modules_tardisdate'] = array(
    '#type' => 'fieldset',
    '#title' => t('TARDIS Date'),
    '#group' => 'tardis_general_modules',
  );

  // First we have to get a list of all fields in all node types:
  $tardisdate_fields = field_info_fields();

  // And define an options array to be populated with such fields, beginning
  // with the usual "Created date" value.
  $tardisdate_date_fields = array('created' => 'Default created date');

  // But only date fields which are in use:
  foreach ($tardisdate_fields as $tardisdate_field) {
    if ($tardisdate_field['module'] == 'date' && $tardisdate_field['active'] == 1 && $tardisdate_field['deleted'] == 0) {
      $tardisdate_field_name = $tardisdate_field['field_name'];
      $tardisdate_date_fields[$tardisdate_field_name] = $tardisdate_field_name;
    }
  }

  // And finally create one option for each date.module field:
  $form['tardis_general_modules_tardisdate']['tardisdate_field'] = array(
    '#type' => 'select',
    '#title' => t('Date field to use'),
    '#options' => $tardisdate_date_fields,
    '#default_value' => variable_get('tardisdate_field', 'created'),
    '#description' => t('Choose a date field with which to order nodes. Remember: only nodes that have that field will appear in the TARDIS results.'),
  );

  return (system_settings_form($form));
}

/**
 * This function alters the TARDIS query, filtering it by date.module fields.
 *
 * Unfortunately, couldn't be made into a hook.
 */
function _tardisdate_join_query($query) {
  // First we check if the user's asked to filter by a certain date.module field
  // and not by the usual 'Created date' field:
  $tardisdate_field = variable_get('tardisdate_field', 'created');

  if ($tardisdate_field != 'created') {
    $tardisdate_field_value = $tardisdate_field . '_value';
    $tardisdate_field_table = 'field_data_' . $tardisdate_field;

    // If not, we filter by the chosen date.module field.
    $subquery = db_select($tardisdate_field_table, 'd')
      ->fields('d', array(
        'entity_id',
        'bundle',
        $tardisdate_field_value,
      ))
      ->orderBy($tardisdate_field_value, 'DESC');

    $query->join($subquery, 'd', 'n.nid = d.entity_id');
  }
  else {
    $query->orderBy('created', 'DESC');
  }
}
